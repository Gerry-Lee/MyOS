cscope 15 $HOME/Desktop/orange/c5 -q 0000000475 0000036248
	@include/const.h

2 #i‚de‡
_CONST_H_


3 
	#_CONST_H_


	)

5 
	#EXTERN
 

	)

8 
	#PUBLIC


	)

9 
	#PRIVATE
 

	)

12 
	#GDT_SIZE
 128

	)

13 
	#IDT_SIZE
 256

	)

16 
	#INT_M_CTL
 0x20

	)

17 
	#INT_M_CTLMASK
 0x21

	)

18 
	#INT_S_CTL
 0xA0

	)

19 
	#INT_S_CTLMASK
 0xA1

	)

22 
	#PRIVILEGE_KRNL
 0

	)

23 
	#PRIVILEGE_TASK
 1

	)

24 
	#PRIVILEGE_USER
 3

	)

27 
	#RPL_KRNL
 
SA_RPL0


	)

28 
	#RPL_TASK
 
SA_RPL1


	)

29 
	#RPL_USER
 
SA_RPL3


	)

34 
	#TRUE
 1

	)

35 
	#FALSE
 0

	)

	@include/global.h

4 #ifde‡
GLOBAL_VARIABLES_HERE


5 #unde‡
EXTERN


6 
	#EXTERN


	)

11 
EXTERN
 
	gdi•_pos
;

12 
EXTERN
 
u8
 
	ggdt_±r
[6];

14 
EXTERN
 
DESCRIPTOR
 
	ggdt
[
GDT_SIZE
];

15 
EXTERN
 
u8
 
	gidt_±r
[6];

16 
EXTERN
 
GATE
 
	gidt
[
IDT_SIZE
];

18 
EXTERN
 
TSS
 
	gtss
;

19 
EXTERN
 
PROCESS
* 
	gp_¥oc_ªady
;

20 
PROCESS
 
¥oc_èbÀ
[];

21 
èsk_°ack
[];

	@include/process.h

5 
	ss_°ack‰ame
 {

6 
u32
 
	mgs
;

7 
u32
 
	mfs
;

8 
u32
 
	mes
;

9 
u32
 
	mds
;

10 
u32
 
	medi
;

11 
u32
 
	mesi
;

12 
u32
 
	mebp
;

13 
u32
 
	mkî√l_e•
;

14 
u32
 
	mebx
;

15 
u32
 
	medx
;

16 
u32
 
	mecx
;

17 
u32
 
	móx
;

18 
u32
 
	mªèddr
;

19 
u32
 
	meù
;

20 
u32
 
	mcs
;

21 
u32
 
	meÊags
;

22 
u32
 
	me•
;

23 
u32
 
	mss
;

24 }
	tSTACK_FRAME
;

27 
	ss_¥oc
 {

28 
STACK_FRAME
 
	mªgs
;

29 
u16
 
	mldt_£l
;

30 
DESCRIPTOR
 
	mldts
[
LDT_SIZE
];

31 
u32
 
	mpid
;

32 
	mp_«me
[16];

33 }
	tPROCESS
;

36 
	#MAX_TASKS
 1

	)

39 
	#STACK_SIZE_TESTA
 0x8000

	)

41 
	#STACK_SIZE_TOTAL
 
STACK_SIZE_TESTA


	)

	@include/protect.h

2 #i‚de‡
_PROTECT_H_


3 
	#_PROTECT_H_


	)

8 
	#INDEX_DUMMY
 0

9 
	#INDEX_FLAT_C
 1

10 
	#INDEX_FLAT_RW
 2

11 
	#INDEX_VIDEO
 3

12 
	#INDEX_TSS
 4

	)

13 
	#INDEX_LDT_FIRST
 5

	)

17 
	#SELECTOR_DUMMY
 0

18 
	#SELECTOR_FLAT_C
 0x08

19 
	#SELECTOR_FLAT_RW
 0x10

20 
	#SELECTOR_VIDEO
 (0x18+3)

21 
	#SELECTOR_TSS
 0x20

	)

22 
	#SELECTOR_LDT_FIRST
 0x28

	)

24 
	#SELECTOR_KERNEL_CS
 
SELECTOR_FLAT_C


	)

25 
	#SELECTOR_KERNEL_DS
 
SELECTOR_FLAT_RW


	)

26 
	#SELECTOR_KERNEL_GS
 
SELECTOR_VIDEO


	)

29 
	#LDT_SIZE
 2

	)

34 
	#SA_RPL_MASK
 0xFFFC

35 
	#SA_RPL0
 0

	)

36 
	#SA_RPL1
 1

	)

37 
	#SA_RPL2
 2

	)

38 
	#SA_RPL3
 3

	)

45 
	#SA_TI_MASK
 0xFFFB

46 
	#SA_TIG
 0

	)

47 
	#SA_TIL
 4

	)

50 
	#DA_32
 0x4000

	)

51 
	#DA_LIMIT_4K
 0x8000

	)

52 
	#DA_DPL0
 0x00

	)

53 
	#DA_DPL1
 0x20

	)

54 
	#DA_DPL2
 0x40

	)

55 
	#DA_DPL3
 0x60

	)

57 
	#DA_DR
 0x90

	)

58 
	#DA_DRW
 0x92

	)

59 
	#DA_DRWA
 0x93

	)

60 
	#DA_C
 0x98

	)

61 
	#DA_CR
 0x9A

	)

62 
	#DA_CCO
 0x9C

	)

63 
	#DA_CCOR
 0x9E

	)

65 
	#DA_LDT
 0x82

	)

66 
	#DA_TaskG©e
 0x85

	)

67 
	#DA_386TSS
 0x89

	)

68 
	#DA_386CG©e
 0x8C

	)

69 
	#DA_386IG©e
 0x8E

	)

70 
	#DA_386TG©e
 0x8F

	)

75 
	#INT_VECTOR_DIVIDE
 0x0

	)

76 
	#INT_VECTOR_DEBUG
 0x1

	)

77 
	#INT_VECTOR_NMI
 0x2

	)

78 
	#INT_VECTOR_BREAKPOINT
 0x3

	)

79 
	#INT_VECTOR_OVERFLOW
 0x4

	)

80 
	#INT_VECTOR_BOUNDS
 0x5

	)

81 
	#INT_VECTOR_INVAL_OP
 0x6

	)

82 
	#INT_VECTOR_COPROC_NOT
 0x7

	)

83 
	#INT_VECTOR_DOUBLE_FAULT
 0x8

	)

84 
	#INT_VECTOR_COPROC_SEG
 0x9

	)

85 
	#INT_VECTOR_INVAL_TSS
 0xA

	)

86 
	#INT_VECTOR_SEG_NOT
 0xB

	)

87 
	#INT_VECTOR_STACK_FAULT
 0xC

	)

88 
	#INT_VECTOR_PROTECTION
 0xD

	)

89 
	#INT_VECTOR_PAGE_FAULT
 0xE

	)

90 
	#INT_VECTOR_COPROC_ERR
 0x10

	)

92 
	#INT_VECTOR_IRQ0
 0x20

	)

93 
	#INT_VECTOR_IRQ8
 0x28

	)

97 
	#vú2phys
(
£g_ba£
,
vú
)(
u32
)(((u32)£g_ba£Ë+ (u32)(vú))

	)

103 
	ss_des¸ùt‹


105 
u16
 
	mlimô_low
;

106 
u16
 
	mba£_low
;

107 
u8
 
	mba£_mid
;

108 
u8
 
	m©å1
;

109 
u8
 
	mlimô_high_©å2
;

110 
u8
 
	mba£_high
;

111 }
	tDESCRIPTOR
;

115 
	ss_g©e


117 
u16
 
	moff£t_low
;

118 
u16
 
	m£À˘‹
;

119 
u8
 
	mdcou¡
;

123 
u8
 
	m©å
;

124 
u16
 
	moff£t_hight
;

125 }
	tGATE
;

128 
	ss_tss
{

129 
u32
 
	mbacklök
;

130 
u32
 
	me•0
;

131 
u32
 
	mss0
;

132 
u32
 
	me•1
;

133 
u32
 
	mss1
;

134 
u32
 
	me•2
;

135 
u32
 
	mss2
;

136 
u32
 
	m¸3
;

137 
u32
 
	meù
;

138 
u32
 
	mÊags
;

139 
u32
 
	móx
;

140 
u32
 
	mecx
;

141 
u32
 
	medx
;

142 
u32
 
	mebx
;

143 
u32
 
	me•
;

144 
u32
 
	mebp
;

145 
u32
 
	mesi
;

146 
u32
 
	medi
;

147 
u32
 
	mes
;

148 
u32
 
	mcs
;

149 
u32
 
	mss
;

150 
u32
 
	mds
;

151 
u32
 
	mfs
;

152 
u32
 
	mgs
;

153 
u32
 
	mldt
;

154 
u16
 
	må≠
;

155 
u16
 
	mioba£
;

156 }
	tTSS
;

	@include/proto.h

8 
PUBLIC
 
out_byã
(
u16
 
p‹t
,
u8
 
vÆue
);

9 
PUBLIC
 
u8
 
ö_byã
(
u16
 
p‹t
);

10 
PUBLIC
 
di•_°r
(* 
öfo
);

11 
PUBLIC
 
di•_cﬁ‹_°r
(* 
öfo
,
cﬁ‹
);

12 
PUBLIC
 
öô_¥Ÿ
();

13 
PUBLIC
 
öô_8259A
();

	@include/string.h

2 
PUBLIC
 * 
mem˝y
(* 
p_d°
, * 
p_§c
, 
size
);

	@include/type.h

2 #i‚de‡
_TYPE_H_


3 
	#_TYPE_H_


	)

5 
	tu32
;

6 
	tu16
;

7 
	tu8
;

9 (*
	göt_h™dÀr
) ();

	@kernel/global.c

3 
	#GLOBAL_VARIABLES_HERE


	)

5 
	~"ty≥.h
"

6 
	~"c⁄°.h
"

7 
	~"¥Ÿe˘.h
"

8 
	~"¥Ÿo.h
"

9 
	~"¥o˚ss.h
"

10 
	~"globÆ.h
"

12 
PUBLIC
 
	gèsk_°ack
[
STACK_SIZE_TOTAL
];

14 
PUBLIC
 
PROCESS
 
	g¥oc_èbÀ
[
MAX_TASKS
];

	@kernel/i8259.c

5 
	~"ty≥.h
"

6 
	~"c⁄°.h
"

7 
	~"¥Ÿe˘.h
"

8 
	~"¥Ÿo.h
"

10 
PUBLIC
 
	$öô_8259A
()

13 
	`out_byã
(
INT_M_CTL
,0x11);

16 
	`out_byã
(
INT_S_CTL
,0x11);

19 
	`out_byã
(
INT_M_CTLMASK
,
INT_VECTOR_IRQ0
);

22 
	`out_byã
(
INT_S_CTLMASK
,
INT_VECTOR_IRQ8
);

25 
	`out_byã
(
INT_M_CTLMASK
,0x4);

28 
	`out_byã
(
INT_S_CTLMASK
,0x2);

31 
	`out_byã
(
INT_M_CTLMASK
,0x1);

34 
	`out_byã
(
INT_S_CTLMASK
,0x1);

37 
	`out_byã
(
INT_M_CTLMASK
,0xFD);

40 
	`out_byã
(
INT_S_CTLMASK
,0xFF);

42 
	}
}

44 
PUBLIC
 
	$öå±_h™dÀr
(
úq
)

46 
	`di•_°r
("Interrupt Request, Num: ");

47 
	`di•_öt
(
úq
);

48 
	`di•_°r
("\n");

49 
	}
}

	@kernel/main.c

6 
	~"ty≥.h
"

7 
	~"c⁄°.h
"

8 
	~"¥Ÿe˘.h
"

9 
	~"¥Ÿo.h
"

10 
	~"°rög.h
"

11 
	~"¥o˚ss.h
"

12 
	~"globÆ.h
"

20 
PUBLIC
 
	$kî√l_maö
()

22 
	`di•_°r
("--------\"kernel_main\"---------");

24 
PROCESS
* 
p_¥oc
 = 
¥oc_èbÀ
;

26 
p_¥oc
->
ldt_£l
 = 
SELECTOR_LDT_FIRST
;

29 
	`mem˝y
(&
p_¥oc
->
ldts
[0],&
gdt
[
SELECTOR_KERNEL_CS
>>3],(
DESCRIPTOR
));

30 
p_¥oc
->
ldt
[0].
©å1
 = 
DA_C
 | 
PRIVILEGE
 << 5;

32 
	`mem˝y
(&
p_¥oc
->
ldts
[1],&
gdt
[
SELECTOR_KERNEL_DS
>>3],(
DESCRIPTOR
));

33 
p_¥oc
->
ldt
[1].
©å1
 = 
DA_DRW
 | 
PRIVILEGE
 << 5;

36 
p_¥oc
->
ªgs
.
cs
 = (0 & 
SA_RPL_MASK
 & 
SA_TI_MASK
Ë| 
SA_TIL
 | 
RPL_TASK
;

37 
p_¥oc
->
ªgs
.
ds
 = (8 & 
SA_RPL_MASK
 & 
SA_TI_MASK
Ë| 
SA_TIL
 | 
RPL_TASK
;

38 
p_¥oc
->
ªgs
.
es
 = (8 & 
SA_RPL_MASK
 & 
SA_TI_MASK
Ë| 
SA_TIL
 | 
RPL_TASK
;

39 
p_¥oc
->
ªgs
.
fs
 = (8 & 
SA_RPL_MASK
 & 
SA_TI_MASK
Ë| 
SA_TIL
 | 
RPL_TASK
;

40 
p_¥oc
->
ªgs
.
ss
 = (8 & 
SA_RPL_MASK
 & 
SA_TI_MASK
Ë| 
SA_TIL
 | 
RPL_TASK
;

41 
p_¥oc
->
ªgs
.
gs
 = (
SELECTOR_KERNEL_GS
 & 
SA_RPL_MASK
Ë| 
RPL_TASK
;

42 
p_¥oc
->
ªgs
.
eù
 = (
u32
)
Te°A
;

43 
p_¥oc
->
ªgs
.
e•
 = (
u32
)
èsk_°ack
 + 
STACK_SIZE_TOTAL
;

44 
p_¥oc
->
ªgs
.
eÊags
 = 0x1202;

46 
p_¥oc_ªady
 = 
¥oc_èbÀ
;

47 
	`ª°¨t
();

50 
	}
}

52 
	$Te°A
()

54 
i
=0;

56 
	`di•_°r
("A");

57 
	`di•_öt
(
i
++);

58 
	`di•_°r
(".");

59 
	`dñay
(1);

61 
	}
}

	@kernel/protect.c

3 
	~"ty≥.h
"

4 
	~"c⁄°.h
"

5 
	~"¥Ÿe˘.h
"

6 
	~"globÆ.h
"

7 
	~"¥Ÿo.h
"

8 
	~"¥o˚ss.h
"

10 
PRIVATE
 
öô_idt_desc
(
ve˘‹
 , 
u8
 
desc_ty≥
,

11 
öt_h™dÀr
 
h™dÀr
,
¥ivûege
);

13 
PRIVATE
 
öô_des¸ùt‹
(
DESCRIPTOR
 *
p_desc
,
u32
 
ba£
,u32 
limô
,
u16
 
©å
);

18 
divide_îr‹
();

19 
sögÀ_°ï_ex˚±i⁄
();

20 
nmi
();

21 
bªakpoöt_ex˚±i⁄
();

22 
ovîÊow
();

23 
bounds_check
();

24 
övÆ_›code
();

25 
c›r_nŸ_avaûabÀ
();

26 
doubÀ_Áu…
();

27 
c›r_£g_ovîrun
();

28 
övÆ_tss
();

29 
£gmít_nŸ_¥e£¡
();

30 
°ack_ex˚±i⁄
();

31 
gíîÆ_¥Ÿe˘i⁄
();

32 
∑ge_Áu…
();

33 
c›r_îr‹
();

36 
höt00
();

37 
höt01
();

38 
höt02
();

39 
höt03
();

40 
höt04
();

41 
höt05
();

42 
höt06
();

43 
höt07
();

44 
höt08
();

45 
höt09
();

46 
höt10
();

47 
höt11
();

48 
höt12
();

49 
höt13
();

50 
höt14
();

51 
höt15
();

55 
PUBLIC
 
	$öô_¥Ÿ
()

57 
	`öô_8259A
();

60 
	`öô_idt_desc
–
INT_VECTOR_DIVIDE
, 
DA_386IG©e
, 
divide_îr‹
, 
PRIVILEGE_KRNL
);

61 
	`öô_idt_desc
–
INT_VECTOR_DEBUG
, 
DA_386IG©e
, 
sögÀ_°ï_ex˚±i⁄
, 
PRIVILEGE_KRNL
);

62 
	`öô_idt_desc
–
INT_VECTOR_NMI
, 
DA_386IG©e
, 
nmi
, 
PRIVILEGE_KRNL
);

63 
	`öô_idt_desc
–
INT_VECTOR_BREAKPOINT
, 
DA_386IG©e
, 
bªakpoöt_ex˚±i⁄
, 
PRIVILEGE_USER
);

64 
	`öô_idt_desc
–
INT_VECTOR_OVERFLOW
, 
DA_386IG©e
 , 
ovîÊow
, 
PRIVILEGE_USER
);

65 
	`öô_idt_desc
–
INT_VECTOR_BOUNDS
, 
DA_386IG©e
, 
bounds_check
, 
PRIVILEGE_KRNL
);

66 
	`öô_idt_desc
–
INT_VECTOR_INVAL_OP
, 
DA_386IG©e
, 
övÆ_›code
, 
PRIVILEGE_KRNL
);

67 
	`öô_idt_desc
–
INT_VECTOR_COPROC_NOT
, 
DA_386IG©e
, 
c›r_nŸ_avaûabÀ
, 
PRIVILEGE_KRNL
);

68 
	`öô_idt_desc
–
INT_VECTOR_DOUBLE_FAULT
, 
DA_386IG©e
, 
doubÀ_Áu…
, 
PRIVILEGE_KRNL
);

69 
	`öô_idt_desc
–
INT_VECTOR_COPROC_SEG
, 
DA_386IG©e
, 
c›r_£g_ovîrun
, 
PRIVILEGE_KRNL
);

70 
	`öô_idt_desc
–
INT_VECTOR_INVAL_TSS
, 
DA_386IG©e
, 
övÆ_tss
, 
PRIVILEGE_KRNL
);

71 
	`öô_idt_desc
–
INT_VECTOR_SEG_NOT
, 
DA_386IG©e
, 
£gmít_nŸ_¥e£¡
, 
PRIVILEGE_KRNL
);

72 
	`öô_idt_desc
–
INT_VECTOR_STACK_FAULT
, 
DA_386IG©e
, 
°ack_ex˚±i⁄
, 
PRIVILEGE_KRNL
);

73 
	`öô_idt_desc
–
INT_VECTOR_PROTECTION
, 
DA_386IG©e
, 
gíîÆ_¥Ÿe˘i⁄
, 
PRIVILEGE_KRNL
);

74 
	`öô_idt_desc
–
INT_VECTOR_PAGE_FAULT
, 
DA_386IG©e
, 
∑ge_Áu…
, 
PRIVILEGE_KRNL
);

75 
	`öô_idt_desc
–
INT_VECTOR_COPROC_ERR
, 
DA_386IG©e
, 
c›r_îr‹
, 
PRIVILEGE_KRNL
);

78 
	`öô_idt_desc
(
INT_VECTOR_IRQ0
 + 0, 
DA_386IG©e
 , 
höt00
 , 
PRIVILEGE_KRNL
);

79 
	`öô_idt_desc
(
INT_VECTOR_IRQ0
 + 1, 
DA_386IG©e
 , 
höt01
 , 
PRIVILEGE_KRNL
);

80 
	`öô_idt_desc
(
INT_VECTOR_IRQ0
 + 2, 
DA_386IG©e
 , 
höt02
 , 
PRIVILEGE_KRNL
);

81 
	`öô_idt_desc
(
INT_VECTOR_IRQ0
 + 3, 
DA_386IG©e
 , 
höt03
 , 
PRIVILEGE_KRNL
);

82 
	`öô_idt_desc
(
INT_VECTOR_IRQ0
 + 4, 
DA_386IG©e
 , 
höt04
 , 
PRIVILEGE_KRNL
);

83 
	`öô_idt_desc
(
INT_VECTOR_IRQ0
 + 5, 
DA_386IG©e
 , 
höt05
 , 
PRIVILEGE_KRNL
);

84 
	`öô_idt_desc
(
INT_VECTOR_IRQ0
 + 6, 
DA_386IG©e
 , 
höt06
 , 
PRIVILEGE_KRNL
);

85 
	`öô_idt_desc
(
INT_VECTOR_IRQ0
 + 7, 
DA_386IG©e
 , 
höt07
 , 
PRIVILEGE_KRNL
);

86 
	`öô_idt_desc
(
INT_VECTOR_IRQ8
 + 0, 
DA_386IG©e
 , 
höt08
 , 
PRIVILEGE_KRNL
);

87 
	`öô_idt_desc
(
INT_VECTOR_IRQ8
 + 1, 
DA_386IG©e
 , 
höt09
 , 
PRIVILEGE_KRNL
);

88 
	`öô_idt_desc
(
INT_VECTOR_IRQ8
 + 2, 
DA_386IG©e
 , 
höt10
 , 
PRIVILEGE_KRNL
);

89 
	`öô_idt_desc
(
INT_VECTOR_IRQ8
 + 3, 
DA_386IG©e
 , 
höt11
 , 
PRIVILEGE_KRNL
);

90 
	`öô_idt_desc
(
INT_VECTOR_IRQ8
 + 4, 
DA_386IG©e
 , 
höt12
 , 
PRIVILEGE_KRNL
);

91 
	`öô_idt_desc
(
INT_VECTOR_IRQ8
 + 5, 
DA_386IG©e
 , 
höt13
 , 
PRIVILEGE_KRNL
);

92 
	`öô_idt_desc
(
INT_VECTOR_IRQ8
 + 6, 
DA_386IG©e
 , 
höt14
 , 
PRIVILEGE_KRNL
);

93 
	`öô_idt_desc
(
INT_VECTOR_IRQ8
 + 7, 
DA_386IG©e
 , 
höt15
 , 
PRIVILEGE_KRNL
);

97 
	`mem£t
(&
tss
,0,(tss));

98 
tss
.
ss0
 = 
SELECTOR_KERNEL_DS
;

99 
	`öô_des¸ùt‹
(&
gdt
[
INDEX_TSS
],

100 
	`vú2phys
(
	`£g2phys
(
SELECTOR_KERNEL_DS
),&
tss
),

101 (
tss
Ë- 1, 
DA_386TSS
);

103 
tss
.
ioba£
 = (tss);

106 
	`öô_des¸ùt‹
(&
gdt
[
INDEX_LDT_FIRST
],

107 
	`vú2phys
(
	`£g2phys
(
SELECTOR_KERNEL_DS
),
¥oc_èbÀ
[0].
ldts
),

108 
LDT_SIZE
 * (
DESCRIPTOR
Ë- 1, 
DA_LDT
);

109 
	}
}

115 
PRIVATE
 
	$öô_idt_desc
(
ve˘‹
,
u8
 
desc_ty≥
,

116 
öt_h™dÀr
 
h™dÀr
,
¥ivûege
)

118 
GATE
* 
p_g©e
 = &
idt
[
ve˘‹
];

119 
u32
 
ba£
 = (u32)
h™dÀr
;

120 
p_g©e
->
off£t_low
 = 
ba£
 & 0xFFFF;

121 
p_g©e
->
£À˘‹
 = 
SELECTOR_KERNEL_CS
;

122 
p_g©e
->
dcou¡
 = 0;

123 
p_g©e
->
©å
 = 
desc_ty≥
 | (
¥ivûege
 << 5);

124 
p_g©e
->
off£t_hight
 = (
ba£
>>16) & 0xFFFF;

125 
	}
}

131 
PUBLIC
 
u32
 
	$£g2phys
(
u16
 
£g
)

133 
DESCRIPTOR
* 
p_desc
 = &
gdt
[ 
£g
 >> 3];

134  (
p_desc
->
ba£_high
 << 24 |Ö_desc->
ba£_mid
 << 16 |Ö_desc->
ba£_low
);

135 
	}
}

140 
PRIVATE
 
	$öôo_des¸ùt‹
(
DESCIPRTOR
* 
p_desc
,
u32
 
ba£
 ,u32 
limô
,
u16
 
©å
)

142 
p_desc
->
limô_low
 = 
limô
 & 0x0FFFF;

143 
p_desc
->
ba£_low
 = 
ba£
 & 0x0FFFF;

144 
p_desc
->
ba£_mid
 = (
ba£
>>16) & 0x0FF;

145 
p_desc
->
©å1
 = 
©å
 & 0xFF;

146 
p_desc
->
limô_high_©å2
 = ((
limô
>>16)&0x0F)|(
©å
>>8)&0xF0;

147 
p_desc
->
ba£_high
 = (
ba£
>>24) & 0x0FF;

148 
	}
}

150 
PUBLIC
 
	$ex˚±i⁄_h™dÀr
(
vec_no
,
îr_code
,
eù
,
cs
,
eÊags
)

152 
i
;

153 
ãxt_cﬁ‹
 = 0x74;

155 * 
îr_msg
[] = {

179 
di•_pos
 = 0;

180 
i
=0;i<80*5;i++){

181 
	`di•_°r
(" ");

183 
di•_pos
 = 0;

185 
	`di•_cﬁ‹_°r
("Ex˚±i⁄! --> ", 
ãxt_cﬁ‹
);

186 
	`di•_cﬁ‹_°r
(
îr_msg
[
vec_no
], 
ãxt_cﬁ‹
);

187 
	`di•_cﬁ‹_°r
("\n\n", 
ãxt_cﬁ‹
);

188 
	`di•_cﬁ‹_°r
("EFLAGS:", 
ãxt_cﬁ‹
);

189 
	`di•_öt
(
eÊags
);

190 
	`di•_cﬁ‹_°r
("CS:", 
ãxt_cﬁ‹
);

191 
	`di•_öt
(
cs
);

192 
	`di•_cﬁ‹_°r
("EIP:", 
ãxt_cﬁ‹
);

193 
	`di•_öt
(
eù
);

195 if(
îr_code
 != 0xFFFFFFFF){

196 
	`di•_cﬁ‹_°r
("Eº‹ code:", 
ãxt_cﬁ‹
);

197 
	`di•_öt
(
îr_code
);

199 
	}
}

	@kernel/start.c

5 
	~"ty≥.h
"

6 
	~"c⁄°.h
"

7 
	~"¥Ÿe˘.h
"

8 
	~"°rög.h
"

9 
	~"¥Ÿo.h
"

10 
	~"globÆ.h
"

11 
	~"¥o˚ss.h
"

13 
PUBLIC
 
	$c°¨t
()

15 
	`di•_°r
("\n\n\n\n\n\n\n\n\n\n\n\n\n\n-----\"cstart\" begins-----\n");

18 
	`mem˝y
(&
gdt
,

19 (*)(*((
u32
*)(&
gdt_±r
[2]))),

20 *((
u16
*)(&
gdt_±r
[0]))+1 );

23 
u16
* 
p_gdt_limô
 = (u16*)(&
gdt_±r
[0]);

24 
u32
* 
p_gdt_ba£
 = (u32*)(&
gdt_±r
[2]);

25 *
p_gdt_limô
 = 
GDT_SIZE
 * (
DESCRIPTOR
) - 1;

26 *
p_gdt_ba£
 =(
u32
)&
gdt
;

29 
u16
* 
p_idt_limô
 = (u16*)(&
idt_±r
[0]);

30 
u32
* 
p_idt_ba£
 = (u32*)(&
idt_±r
[2]);

31 *
p_idt_limô
 = 
IDT_SIZE
 * (
GATE
) - 1;

32 *
p_idt_ba£
 = (
u32
)&
idt
;

34 
	`öô_¥Ÿ
();

36 
	`di•_°r
("-----\"cstart\"Énds-----");

37 
	}
}

	@lib/klib.c

5 
	~"ty≥.h
"

6 
	~"c⁄°.h
"

7 
	~"¥Ÿe˘.h
"

8 
	~"¥Ÿo.h
"

9 
	~"°rög.h
"

10 
	~"globÆ.h
"

11 
	~"¥o˚ss.h
"

15 
PUBLIC
 * 
	$ôﬂ
(* 
°r
,
num
 )

17 * 
p

°r
;

18 
ch
;

19 
i
;

20 
Êag
=0;

22 *
p
++='0';

23 *
p
++='x';

25 if(
num
==0)

27 *
p
++ = '0';

31 
i
=28;i>=0;i-=4)

33 
ch
(
num
>>
i
) & 0xF;

34 if(
Êag
||(
ch
>0))

36 
Êag
 = 1;

37 
ch
 += '0';

38 if(
ch
 > '9'){

39 
ch
 += 7;

41 *
p
++ = 
ch
;

45 *
p
 = 0;

46  
°r
;

47 
	}
}

52 
PUBLIC
 
	$di•_öt
(
öput
)

54 
ouçut
[16];

55 
	`ôﬂ
(
ouçut
,
öput
);

56 
	`di•_°r
(
ouçut
);

57 
	}
}

63 
PUBLIC
 
	$dñay
(
time
)

65 
i
,
j
,
k
;

66 
k
=0;k<
time
;k++){

67 
i
=0;i<10;i++){

68 
j
=0;j<10000;j++){}

71 
	}
}

	@/usr/include/string.h

24 #i‚def 
_STRING_H


25 
	#_STRING_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

42 
__BEGIN_NAMESPACE_STD


44 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

45 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

46 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

50 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

51 
__END_NAMESPACE_STD


56 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


57 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

58 
__c
, 
size_t
 
__n
)

59 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

63 
__BEGIN_NAMESPACE_STD


65 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

68 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

72 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


75 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

76 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

80 #ifde‡
__OPTIMIZE__


81 
__exã∫_Æways_ölöe
 *

82 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


84  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

87 
__exã∫_Æways_ölöe
 
__c⁄°
 *

88 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


90  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

93 
	}
}

95 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

96 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

98 
__END_NAMESPACE_STD


100 #ifde‡
__USE_GNU


103 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


104 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

105 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

107 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

110 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

126 
__BEGIN_NAMESPACE_STD


128 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

131 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

132 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

133 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

139 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

140 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

146 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

147 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

153 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

154 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

155 
__THROW
 
	`__n⁄nuŒ
 ((2));

156 
__END_NAMESPACE_STD


158 #ifde‡
__USE_XOPEN2K8


162 
	~<xloˇÀ.h
>

165 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

166 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

168 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

169 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

172 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

173 || 
deföed
 
__USE_XOPEN2K8


175 *
	$°rdup
 (
__c⁄°
 *
__s
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

182 #i‡
deföed
 
__USE_XOPEN2K8


183 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

184 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

187 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


189 
	#°rdu∑
(
s
) \

190 (
__exãnsi⁄__
 \

192 
__c⁄°
 *
__ﬁd
 = (
s
); \

193 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

194 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

195 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

196 
	}
}))

	)

199 
	#°∫du∑
(
s
, 
n
) \

200 (
__exãnsi⁄__
 \

202 
__c⁄°
 *
__ﬁd
 = (
s
); \

203 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

204 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

205 
__√w
[
__Àn
] = '\0'; \

206 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

207 }))

	)

210 
	g__BEGIN_NAMESPACE_STD


212 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


215 *
°rchr
 (*
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

218 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

220 #ifde‡
__OPTIMIZE__


221 
__exã∫_Æways_ölöe
 *

222 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


224  
__buûtö_°rchr
 (
__s
, 
__c
);

227 
__exã∫_Æways_ölöe
 
__c⁄°
 *

228 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


230  
__buûtö_°rchr
 (
__s
, 
__c
);

235 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

236 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

239 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


242 *
	`°ºchr
 (*
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

245 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__OPTIMIZE__


248 
__exã∫_Æways_ölöe
 *

249 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


251  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

254 
__exã∫_Æways_ölöe
 
__c⁄°
 *

255 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


257  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

260 
	}
}

262 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

263 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_GNU


270 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


271 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

274 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

276 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

281 
__BEGIN_NAMESPACE_STD


284 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

289 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

291 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


294 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

297 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

299 #ifde‡
__OPTIMIZE__


300 
__exã∫_Æways_ölöe
 *

301 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


303  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

306 
__exã∫_Æways_ölöe
 
__c⁄°
 *

307 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


309  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

312 
	}
}

314 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

318 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


321 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

322 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

324 
__c⁄°
 *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 
__c⁄°
 *

335 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

370 
__c⁄°
 *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 
__c⁄°
 *

482 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 
__c⁄°
 *

510 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 #ifde‡
__GNUC__


530 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

531 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

536 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

541 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

544 #ifdef 
__USE_GNU


547 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

548 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

551 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

552 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

556 #ifdef 
__USE_BSD


559 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

560 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 #ifdef 
__USE_XOPEN2K8


566 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

569 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

577 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

580 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifdef 
__USE_GNU


586 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

587 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

590 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

595 #i‚de‡
ba£«me


600 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


601 "C++" *
	$ba£«me
 (*
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

603 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

604 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

606 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

612 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

613 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

614 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


634 
	~<bôs/°rög.h
>

637 
	~<bôs/°rög2.h
>

640 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


642 
	~<bôs/°rög3.h
>

646 
__END_DECLS


	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

97 #unde‡
__USE_ISOC99


98 #unde‡
__USE_ISOC95


99 #unde‡
__USE_POSIX


100 #unde‡
__USE_POSIX2


101 #unde‡
__USE_POSIX199309


102 #unde‡
__USE_POSIX199506


103 #unde‡
__USE_XOPEN


104 #unde‡
__USE_XOPEN_EXTENDED


105 #unde‡
__USE_UNIX98


106 #unde‡
__USE_XOPEN2K


107 #unde‡
__USE_XOPEN2KXSI


108 #unde‡
__USE_XOPEN2K8


109 #unde‡
__USE_XOPEN2K8XSI


110 #unde‡
__USE_LARGEFILE


111 #unde‡
__USE_LARGEFILE64


112 #unde‡
__USE_FILE_OFFSET64


113 #unde‡
__USE_BSD


114 #unde‡
__USE_SVID


115 #unde‡
__USE_MISC


116 #unde‡
__USE_ATFILE


117 #unde‡
__USE_GNU


118 #unde‡
__USE_REENTRANT


119 #unde‡
__USE_FORTIFY_LEVEL


120 #unde‡
__FAVOR_BSD


121 #unde‡
__KERNEL_STRICT_NAMES


125 #i‚de‡
_LOOSE_KERNEL_NAMES


126 
	#__KERNEL_STRICT_NAMES


	)

130 
	#__USE_ANSI
 1

	)

139 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


140 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

141 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

143 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

148 #i‡
deföed
 
_BSD_SOURCE
 && \

149 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

150 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

151 
	#__FAVOR_BSD
 1

	)

155 #ifde‡
_GNU_SOURCE


156 #unde‡
_ISOC95_SOURCE


157 
	#_ISOC95_SOURCE
 1

	)

158 #unde‡
_ISOC99_SOURCE


159 
	#_ISOC99_SOURCE
 1

	)

160 #unde‡
_POSIX_SOURCE


161 
	#_POSIX_SOURCE
 1

	)

162 #unde‡
_POSIX_C_SOURCE


163 
	#_POSIX_C_SOURCE
 200809L

	)

164 #unde‡
_XOPEN_SOURCE


165 
	#_XOPEN_SOURCE
 700

	)

166 #unde‡
_XOPEN_SOURCE_EXTENDED


167 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

168 #unde‡
_LARGEFILE64_SOURCE


169 
	#_LARGEFILE64_SOURCE
 1

	)

170 #unde‡
_BSD_SOURCE


171 
	#_BSD_SOURCE
 1

	)

172 #unde‡
_SVID_SOURCE


173 
	#_SVID_SOURCE
 1

	)

174 #unde‡
_ATFILE_SOURCE


175 
	#_ATFILE_SOURCE
 1

	)

180 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

181 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

182 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

183 
	#_BSD_SOURCE
 1

	)

184 
	#_SVID_SOURCE
 1

	)

191 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

192 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

193 
	#__USE_ISOC99
 1

	)

197 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

198 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

199 
	#__USE_ISOC95
 1

	)

204 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

205 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

206 
	#_POSIX_SOURCE
 1

	)

207 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

208 
	#_POSIX_C_SOURCE
 2

	)

209 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

210 
	#_POSIX_C_SOURCE
 199506L

	)

211 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

212 
	#_POSIX_C_SOURCE
 200112L

	)

214 
	#_POSIX_C_SOURCE
 200809L

	)

216 
	#__USE_POSIX_IMPLICITLY
 1

	)

219 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


220 
	#__USE_POSIX
 1

	)

223 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


224 
	#__USE_POSIX2
 1

	)

227 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

228 
	#__USE_POSIX199309
 1

	)

231 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

232 
	#__USE_POSIX199506
 1

	)

235 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

236 
	#__USE_XOPEN2K
 1

	)

237 #unde‡
__USE_ISOC95


238 
	#__USE_ISOC95
 1

	)

239 #unde‡
__USE_ISOC99


240 
	#__USE_ISOC99
 1

	)

243 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

244 
	#__USE_XOPEN2K8
 1

	)

245 #unde‡
_ATFILE_SOURCE


246 
	#_ATFILE_SOURCE
 1

	)

249 #ifdef 
_XOPEN_SOURCE


250 
	#__USE_XOPEN
 1

	)

251 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

252 
	#__USE_XOPEN_EXTENDED
 1

	)

253 
	#__USE_UNIX98
 1

	)

254 #unde‡
_LARGEFILE_SOURCE


255 
	#_LARGEFILE_SOURCE
 1

	)

256 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

257 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

258 
	#__USE_XOPEN2K8
 1

	)

259 
	#__USE_XOPEN2K8XSI
 1

	)

261 
	#__USE_XOPEN2K
 1

	)

262 
	#__USE_XOPEN2KXSI
 1

	)

263 #unde‡
__USE_ISOC95


264 
	#__USE_ISOC95
 1

	)

265 #unde‡
__USE_ISOC99


266 
	#__USE_ISOC99
 1

	)

269 #ifde‡
_XOPEN_SOURCE_EXTENDED


270 
	#__USE_XOPEN_EXTENDED
 1

	)

275 #ifde‡
_LARGEFILE_SOURCE


276 
	#__USE_LARGEFILE
 1

	)

279 #ifde‡
_LARGEFILE64_SOURCE


280 
	#__USE_LARGEFILE64
 1

	)

283 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

284 
	#__USE_FILE_OFFSET64
 1

	)

287 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


288 
	#__USE_MISC
 1

	)

291 #ifdef 
_BSD_SOURCE


292 
	#__USE_BSD
 1

	)

295 #ifdef 
_SVID_SOURCE


296 
	#__USE_SVID
 1

	)

299 #ifdef 
_ATFILE_SOURCE


300 
	#__USE_ATFILE
 1

	)

303 #ifdef 
_GNU_SOURCE


304 
	#__USE_GNU
 1

	)

307 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


308 
	#__USE_REENTRANT
 1

	)

311 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

312 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

313 #i‡
_FORTIFY_SOURCE
 > 1

314 
	#__USE_FORTIFY_LEVEL
 2

	)

316 
	#__USE_FORTIFY_LEVEL
 1

	)

319 
	#__USE_FORTIFY_LEVEL
 0

	)

323 
	~<bôs/¥edefs.h
>

326 
	#__STDC_ISO_10646__
 200009L

	)

334 #unde‡
__GNU_LIBRARY__


335 
	#__GNU_LIBRARY__
 6

	)

339 
	#__GLIBC__
 2

	)

340 
	#__GLIBC_MINOR__
 13

	)

342 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

343 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

346 #i‡
deföed
 
__GNUC__
 \

347 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

348 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

349 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

350 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

354 #i‚de‡
__ASSEMBLER__


355 #i‚de‡
_SYS_CDEFS_H


356 
	~<sys/cdefs.h
>

361 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


362 
	#__USE_LARGEFILE
 1

	)

363 
	#__USE_LARGEFILE64
 1

	)

369 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

370 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

371 && 
deföed
 
	g__exã∫_ölöe


372 
	#__USE_EXTERN_INLINES
 1

	)

377 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

378 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

379 && 
deföed
 
	g__exã∫_ölöe


380 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

388 
	~<gnu/°ubs.h
>

	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@
1
.
1
/usr/include
16
274
include/const.h
include/global.h
include/process.h
include/protect.h
include/proto.h
include/string.h
include/type.h
kernel/global.c
kernel/i8259.c
kernel/main.c
kernel/protect.c
kernel/start.c
lib/klib.c
/usr/include/string.h
/usr/include/features.h
/usr/include/xlocale.h
